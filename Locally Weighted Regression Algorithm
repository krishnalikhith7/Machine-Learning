import numpy as np
import matplotlib.pyplot as plt

X=np.linspace(-3,3,1000)
print(X)
X+=np.random.normal(scale=0.05,size=1000)
Y=np.log(np.abs((X**2)-1)+0.5)
print(Y)
plt.scatter(X,Y,alpha=0.32)
def local_regression(x0,X,Y,tau):


    x0=np.r_[1,x0]


    # print(x0)


    #print("len(X)",len(X))


    X=np.c_[np.ones(len(X)),X]


    #print(X)


    xw=X.T *radial_kernel(x0,X,tau)


    print(xw)


    beta=np.linalg.pinv(xw@X)@xw@Y


    return x0@beta
def radial_kernel(x0, X, tau):


    return np.exp(np.sum((X - x0) ** 2, axis=1) / (-2 * tau * tau))
def plot_lwr(tau):


    domain=np.linspace(-3,3,num=300)


    prediction=[local_regression(x0,X,Y,tau) for x0 in domain]


    plt.scatter(X,Y,alpha=0.3)


    plt.plot(domain,prediction,color="red")


    return plt


plot_lwr(0.01)
